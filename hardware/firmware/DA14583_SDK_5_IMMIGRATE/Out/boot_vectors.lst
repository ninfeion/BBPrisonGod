


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_ARMCM0.s
    3 00000000         ; * @brief    CMSIS Core Device Startup File for
    4 00000000         ; *           ARMCM0 Device Series
    5 00000000         ; * @version  V1.08
    6 00000000         ; * @date     23. November 2012
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; *
   10 00000000         ; ******************************************************
                       ************************/
   11 00000000         ;/* Copyright (c) 2011 - 2012 ARM LIMITED
   12 00000000         ;
   13 00000000         ;   All rights reserved.
   14 00000000         ;   Redistribution and use in source and binary forms, w
                       ith or without
   15 00000000         ;   modification, are permitted provided that the follow
                       ing conditions are met:
   16 00000000         ;   - Redistributions of source code must retain the abo
                       ve copyright
   17 00000000         ;     notice, this list of conditions and the following 
                       disclaimer.
   18 00000000         ;   - Redistributions in binary form must reproduce the 
                       above copyright
   19 00000000         ;     notice, this list of conditions and the following 
                       disclaimer in the
   20 00000000         ;     documentation and/or other materials provided with
                        the distribution.
   21 00000000         ;   - Neither the name of ARM nor the names of its contr
                       ibutors may be used
   22 00000000         ;     to endorse or promote products derived from this s
                       oftware without
   23 00000000         ;     specific prior written permission.
   24 00000000         ;   *
   25 00000000         ;   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS A
                       ND CONTRIBUTORS "AS IS"
   26 00000000         ;   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BU
                       T NOT LIMITED TO, THE
   27 00000000         ;   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FO
                       R A PARTICULAR PURPOSE
   28 00000000         ;   ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS 
                       AND CONTRIBUTORS BE
   29 00000000         ;   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL
                       , EXEMPLARY, OR
   30 00000000         ;   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO
                       , PROCUREMENT OF
   31 00000000         ;   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
                       PROFITS; OR BUSINESS
   32 00000000         ;   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LI
                       ABILITY, WHETHER IN
   33 00000000         ;   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLI
                       GENCE OR OTHERWISE)
   34 00000000         ;   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
                       EVEN IF ADVISED OF THE
   35 00000000         ;   POSSIBILITY OF SUCH DAMAGE.
   36 00000000         ;   ----------------------------------------------------
                       -----------------------*/
   37 00000000         ;/*



ARM Macro Assembler    Page 2 


   38 00000000         ;//-------- <<< Use Configuration Wizard in Context Menu
                        >>> ------------------
   39 00000000         ;*/
   40 00000000         
   41 00000000         ;// <h> Stack Configuration
   42 00000000         ;//   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   43 00000000         ;// </h>
   44 00000000         
   45 00000000 00000600 
                       Stack_Size
                               EQU              0x00000600
   46 00000000         
   47 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   48 00000000         Stack_Mem
                               SPACE            Stack_Size
   49 00000600         __initial_sp
   50 00000600         
   51 00000600         
   52 00000600         ;// <h> Heap Configuration
   53 00000600         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   54 00000600         ;// </h>
   55 00000600         
   56 00000600 00000100 
                       Heap_Size
                               EQU              0x00000100
   57 00000600         
   58 00000600                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   59 00000000         __heap_base
   60 00000000         Heap_Mem
                               SPACE            Heap_Size
   61 00000100         __heap_limit
   62 00000100         
   63 00000100         
   64 00000100                 PRESERVE8
   65 00000100                 THUMB
   66 00000100         
   67 00000100         ;remap  uncomment below expression to have the applicati
                       on remap SYSRAM to 0
   68 00000100         ;__REMAP_SYSRAM EQU 1
   69 00000100         
   70 00000100         ; Vector Table Mapped to Address 0 at Reset
   71 00000100         
   72 00000100         ;               AREA    RESET, DATA, READONLY
   73 00000100                 AREA             RESET,DATA, READONLY
   74 00000000                 EXPORT           __Vectors
   75 00000000                 EXPORT           __Vectors_End
   76 00000000                 EXPORT           __Vectors_Size
   77 00000000         ;ENTRY
   78 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   79 00000004                 IF               :DEF:__REMAP_SYSRAM
   82 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   83 00000008                 ENDIF
   84 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   85 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler



ARM Macro Assembler    Page 3 


   86 00000010 00000000        DCD              0           ; Reserved
   87 00000014 00000000        DCD              0           ; Reserved
   88 00000018 00000000        DCD              0           ; Reserved
   89 0000001C 00000000        DCD              0           ; Reserved
   90 00000020 00000000        DCD              0           ; Reserved
   91 00000024 00000000        DCD              0           ; Reserved
   92 00000028 00000000        DCD              0           ; Reserved
   93 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   94 00000030 00000000        DCD              0           ; Reserved
   95 00000034 00000000        DCD              0           ; Reserved
   96 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   97 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   98 00000040         
   99 00000040 00000000        DCD              BLE_WAKEUP_LP_Handler
  100 00000044 00000000        DCD              BLE_FINETGTIM_Handler
  101 00000048 00000000        DCD              BLE_GROSSTGTIM_Handler
  102 0000004C 00000000        DCD              BLE_CSCNT_Handler
  103 00000050 00000000        DCD              BLE_SLP_Handler
  104 00000054 00000000        DCD              BLE_ERROR_Handler
  105 00000058 00000000        DCD              BLE_RX_Handler
  106 0000005C 00000000        DCD              BLE_EVENT_Handler
  107 00000060 00000000        DCD              SWTIM_Handler
  108 00000064 00000000        DCD              WKUP_QUADEC_Handler
  109 00000068 00000000        DCD              BLE_RF_DIAG_Handler
  110 0000006C 00000000        DCD              BLE_CRYPT_Handler
  111 00000070 00000000        DCD              UART_Handler
  112 00000074 00000000        DCD              UART2_Handler
  113 00000078 00000000        DCD              I2C_Handler
  114 0000007C 00000000        DCD              SPI_Handler
  115 00000080 00000000        DCD              ADC_Handler
  116 00000084 00000000        DCD              KEYBRD_Handler
  117 00000088 00000000        DCD              RFCAL_Handler
  118 0000008C 00000000        DCD              GPIO0_Handler
  119 00000090 00000000        DCD              GPIO1_Handler
  120 00000094 00000000        DCD              GPIO2_Handler
  121 00000098 00000000        DCD              GPIO3_Handler
  122 0000009C 00000000        DCD              GPIO4_Handler
  123 000000A0         __Vectors_End
  124 000000A0         
  125 000000A0 000000A0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  126 000000A0                 AREA             |.text|, CODE, READONLY
  127 00000000         
  128 00000000         
  129 00000000         ; Reset Handler
  130 00000000         
  131 00000000         Reset_Handler
                               PROC
  132 00000000                 EXPORT           Reset_Handler             [WEAK
]
  133 00000000                 IMPORT           __main
  134 00000000                 IMPORT           SystemInit
  135 00000000         
  136 00000000         ;remap 
  137 00000000                 IF               :DEF:__REMAP_SYSRAM
  154                          ENDIF



ARM Macro Assembler    Page 4 


  155 00000000         ;remap
  156 00000000         
  157 00000000 4818            LDR              R0, =SystemInit
  158 00000002 4780            BLX              R0
  159 00000004 4818            LDR              R0, =__main
  160 00000006 4700            BX               R0
  161 00000008                 ENDP
  162 00000008         
  163 00000008         
  164 00000008         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  165 00000008                 IMPORT           NMI_HandlerC
  167 00000008         NMI_Handler
                               PROC
  168 00000008 2004            movs             r0, #4
  169 0000000A 4671            mov              r1, lr
  170 0000000C 4208            tst              r0, r1
  171 0000000E D003            beq              NMI_stacking_used_MSP
  172 00000010 F3EF 8009       mrs              r0, psp
  173 00000014 4915            ldr              r1,=NMI_HandlerC
  174 00000016 4708            bx               r1
  175 00000018         NMI_stacking_used_MSP
  176 00000018 F3EF 8008       mrs              r0, msp
  177 0000001C 4913            ldr              r1,=NMI_HandlerC
  178 0000001E 4708            bx               r1
  179 00000020                 ENDP
  180 00000020         
  181 00000020                 IMPORT           HardFault_HandlerC
  183 00000020         HardFault_Handler
                               PROC
  184 00000020 2004            movs             r0, #4
  185 00000022 4671            mov              r1, lr
  186 00000024 4208            tst              r0, r1
  187 00000026 D003            beq              HardFault_stacking_used_MSP
  188 00000028 F3EF 8009       mrs              r0, psp
  189 0000002C 4910            ldr              r1,=HardFault_HandlerC
  190 0000002E 4708            bx               r1
  191 00000030         HardFault_stacking_used_MSP
  192 00000030 F3EF 8008       mrs              r0, msp
  193 00000034 490E            ldr              r1,=HardFault_HandlerC
  194 00000036 4708            bx               r1
  195 00000038                 ENDP
  196 00000038         
  197 00000038         
  198 00000038                 IMPORT           SVC_Handler_c
  199 00000038         SVC_Handler
                               PROC
  200 00000038 2004            movs             r0, #4
  201 0000003A 4671            mov              r1, lr
  202 0000003C 4208            tst              r0, r1
  203 0000003E D003            beq              SVC_stacking_used_MSP
  204 00000040 F3EF 8009       mrs              r0, psp
  205 00000044 490B            ldr              r1,=SVC_Handler_c
  206 00000046 4708            bx               r1
  207 00000048         SVC_stacking_used_MSP
  208 00000048 F3EF 8008       mrs              r0, msp
  209 0000004C 4909            ldr              r1,=SVC_Handler_c
  210 0000004E 4708            bx               r1
  211 00000050                 ENDP



ARM Macro Assembler    Page 5 


  212 00000050         PendSV_Handler
                               PROC
  213 00000050                 EXPORT           PendSV_Handler            [WEAK
]
  214 00000050 E7FE            B                .
  215 00000052                 ENDP
  216 00000052         SysTick_Handler
                               PROC
  217 00000052                 EXPORT           SysTick_Handler            [WEA
K]
  218 00000052 E7FE            B                .
  219 00000054                 ENDP
  220 00000054         Default_Handler
                               PROC
  221 00000054                 EXPORT           BLE_WAKEUP_LP_Handler   [WEAK]
  222 00000054                 EXPORT           BLE_FINETGTIM_Handler   [WEAK]
  223 00000054                 EXPORT           BLE_GROSSTGTIM_Handler  [WEAK]
  224 00000054                 EXPORT           BLE_CSCNT_Handler       [WEAK]
  225 00000054                 EXPORT           BLE_SLP_Handler         [WEAK]
  226 00000054                 EXPORT           BLE_ERROR_Handler       [WEAK]
  227 00000054                 EXPORT           BLE_RX_Handler          [WEAK]
  228 00000054                 EXPORT           BLE_EVENT_Handler    [WEAK]
  229 00000054                 EXPORT           SWTIM_Handler           [WEAK]
  230 00000054                 EXPORT           WKUP_QUADEC_Handler     [WEAK]
  231 00000054                 EXPORT           BLE_RF_DIAG_Handler     [WEAK]
  232 00000054                 EXPORT           BLE_CRYPT_Handler    [WEAK]
  233 00000054                 EXPORT           UART_Handler         [WEAK]
  234 00000054                 EXPORT           UART2_Handler           [WEAK]
  235 00000054                 EXPORT           I2C_Handler             [WEAK]
  236 00000054                 EXPORT           SPI_Handler             [WEAK]
  237 00000054                 EXPORT           ADC_Handler             [WEAK]
  238 00000054                 EXPORT           KEYBRD_Handler          [WEAK]
  239 00000054                 EXPORT           RFCAL_Handler           [WEAK]
  240 00000054                 EXPORT           GPIO0_Handler           [WEAK]
  241 00000054                 EXPORT           GPIO1_Handler           [WEAK]
  242 00000054                 EXPORT           GPIO2_Handler           [WEAK]
  243 00000054                 EXPORT           GPIO3_Handler           [WEAK]
  244 00000054                 EXPORT           GPIO4_Handler           [WEAK]
  245 00000054         
  246 00000054         
  247 00000054         BLE_WAKEUP_LP_Handler
  248 00000054         BLE_FINETGTIM_Handler
  249 00000054         BLE_GROSSTGTIM_Handler
  250 00000054         BLE_CSCNT_Handler
  251 00000054         BLE_SLP_Handler
  252 00000054         BLE_ERROR_Handler
  253 00000054         BLE_RX_Handler
  254 00000054         BLE_EVENT_Handler
  255 00000054         SWTIM_Handler
  256 00000054         WKUP_QUADEC_Handler
  257 00000054         BLE_RF_DIAG_Handler
  258 00000054         BLE_CRYPT_Handler
  259 00000054         UART_Handler
  260 00000054         UART2_Handler
  261 00000054         I2C_Handler
  262 00000054         SPI_Handler
  263 00000054         ADC_Handler
  264 00000054         KEYBRD_Handler
  265 00000054         RFCAL_Handler



ARM Macro Assembler    Page 6 


  266 00000054         GPIO0_Handler
  267 00000054         GPIO1_Handler
  268 00000054         GPIO2_Handler
  269 00000054         GPIO3_Handler
  270 00000054         GPIO4_Handler
  271 00000054 E7FE            B                .
  272 00000056                 ENDP
  273 00000056         
  274 00000056 00 00           ALIGN
  275 00000058         
  276 00000058         
  277 00000058         ; User Initial Stack & Heap
  278 00000058         
  279 00000058                 IF               :DEF:__MICROLIB
  286 00000058         
  287 00000058                 IMPORT           __use_two_region_memory
  288 00000058                 EXPORT           __user_initial_stackheap
  289 00000058         __user_initial_stackheap
  290 00000058         
  291 00000058 4807            LDR              R0, =  Heap_Mem
  292 0000005A 4908            LDR              R1, = (Stack_Mem + Stack_Size)
  293 0000005C 4A08            LDR              R2, = (Heap_Mem +  Heap_Size)
  294 0000005E 4B09            LDR              R3, =  Stack_Mem
  295 00000060 4770            BX               LR
  296 00000062         
  297 00000062 00 00           ALIGN
  298 00000064         
  299 00000064                 ENDIF
  300 00000064         
  301 00000064         
  302 00000064                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000600 
              00000100 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\hex\boot_vectors.d -o.\hex\boot_vectors.o -IC:\Keil_v5\ARM\RV31\
INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ARM --predefine="__UVIS
ION_VERSION SETA 522" --list=.\out\boot_vectors.lst sdk\platform\arch\boot\rvds
\boot_vectors.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 47 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 48 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 292 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 294 in file sdk\platform\arch\boot\rvds\boot_vectors.s

__initial_sp 00000600

Symbol: __initial_sp
   Definitions
      At line 49 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 78 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 58 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 60 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 291 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 293 in file sdk\platform\arch\boot\rvds\boot_vectors.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 59 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000100

Symbol: __heap_limit
   Definitions
      At line 61 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 73 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 78 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 74 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 125 in file sdk\platform\arch\boot\rvds\boot_vectors.s

__Vectors_End 000000A0

Symbol: __Vectors_End
   Definitions
      At line 123 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 75 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 125 in file sdk\platform\arch\boot\rvds\boot_vectors.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 126 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      None
Comment: .text unused
ADC_Handler 00000054

Symbol: ADC_Handler
   Definitions
      At line 263 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 115 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 237 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_CRYPT_Handler 00000054

Symbol: BLE_CRYPT_Handler
   Definitions
      At line 258 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 110 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 232 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_CSCNT_Handler 00000054

Symbol: BLE_CSCNT_Handler
   Definitions
      At line 250 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 102 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 224 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_ERROR_Handler 00000054

Symbol: BLE_ERROR_Handler
   Definitions
      At line 252 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 104 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 226 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_EVENT_Handler 00000054

Symbol: BLE_EVENT_Handler
   Definitions
      At line 254 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 106 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 228 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_FINETGTIM_Handler 00000054

Symbol: BLE_FINETGTIM_Handler
   Definitions
      At line 248 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 100 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 222 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_GROSSTGTIM_Handler 00000054

Symbol: BLE_GROSSTGTIM_Handler
   Definitions
      At line 249 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 101 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 223 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_RF_DIAG_Handler 00000054

Symbol: BLE_RF_DIAG_Handler
   Definitions
      At line 257 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 109 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 231 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_RX_Handler 00000054

Symbol: BLE_RX_Handler
   Definitions
      At line 253 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 105 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 227 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_SLP_Handler 00000054

Symbol: BLE_SLP_Handler
   Definitions
      At line 251 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 103 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 225 in file sdk\platform\arch\boot\rvds\boot_vectors.s

BLE_WAKEUP_LP_Handler 00000054

Symbol: BLE_WAKEUP_LP_Handler
   Definitions
      At line 247 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 99 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 221 in file sdk\platform\arch\boot\rvds\boot_vectors.s

Default_Handler 00000054

Symbol: Default_Handler
   Definitions
      At line 220 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      None
Comment: Default_Handler unused
GPIO0_Handler 00000054

Symbol: GPIO0_Handler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 266 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 118 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 240 in file sdk\platform\arch\boot\rvds\boot_vectors.s

GPIO1_Handler 00000054

Symbol: GPIO1_Handler
   Definitions
      At line 267 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 119 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 241 in file sdk\platform\arch\boot\rvds\boot_vectors.s

GPIO2_Handler 00000054

Symbol: GPIO2_Handler
   Definitions
      At line 268 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 120 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 242 in file sdk\platform\arch\boot\rvds\boot_vectors.s

GPIO3_Handler 00000054

Symbol: GPIO3_Handler
   Definitions
      At line 269 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 121 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 243 in file sdk\platform\arch\boot\rvds\boot_vectors.s

GPIO4_Handler 00000054

Symbol: GPIO4_Handler
   Definitions
      At line 270 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 122 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 244 in file sdk\platform\arch\boot\rvds\boot_vectors.s

HardFault_Handler 00000020

Symbol: HardFault_Handler
   Definitions
      At line 183 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 85 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: HardFault_Handler used once
HardFault_stacking_used_MSP 00000030

Symbol: HardFault_stacking_used_MSP
   Definitions
      At line 191 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 187 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: HardFault_stacking_used_MSP used once
I2C_Handler 00000054



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: I2C_Handler
   Definitions
      At line 261 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 113 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 235 in file sdk\platform\arch\boot\rvds\boot_vectors.s

KEYBRD_Handler 00000054

Symbol: KEYBRD_Handler
   Definitions
      At line 264 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 116 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 238 in file sdk\platform\arch\boot\rvds\boot_vectors.s

NMI_Handler 00000008

Symbol: NMI_Handler
   Definitions
      At line 167 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 84 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: NMI_Handler used once
NMI_stacking_used_MSP 00000018

Symbol: NMI_stacking_used_MSP
   Definitions
      At line 175 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 171 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: NMI_stacking_used_MSP used once
PendSV_Handler 00000050

Symbol: PendSV_Handler
   Definitions
      At line 212 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 96 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 213 in file sdk\platform\arch\boot\rvds\boot_vectors.s

RFCAL_Handler 00000054

Symbol: RFCAL_Handler
   Definitions
      At line 265 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 117 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 239 in file sdk\platform\arch\boot\rvds\boot_vectors.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 131 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 82 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 132 in file sdk\platform\arch\boot\rvds\boot_vectors.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols


SPI_Handler 00000054

Symbol: SPI_Handler
   Definitions
      At line 262 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 114 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 236 in file sdk\platform\arch\boot\rvds\boot_vectors.s

SVC_Handler 00000038

Symbol: SVC_Handler
   Definitions
      At line 199 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 93 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: SVC_Handler used once
SVC_stacking_used_MSP 00000048

Symbol: SVC_stacking_used_MSP
   Definitions
      At line 207 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 203 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: SVC_stacking_used_MSP used once
SWTIM_Handler 00000054

Symbol: SWTIM_Handler
   Definitions
      At line 255 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 107 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 229 in file sdk\platform\arch\boot\rvds\boot_vectors.s

SysTick_Handler 00000052

Symbol: SysTick_Handler
   Definitions
      At line 216 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 97 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 217 in file sdk\platform\arch\boot\rvds\boot_vectors.s

UART2_Handler 00000054

Symbol: UART2_Handler
   Definitions
      At line 260 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 112 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 234 in file sdk\platform\arch\boot\rvds\boot_vectors.s

UART_Handler 00000054

Symbol: UART_Handler
   Definitions
      At line 259 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

      At line 111 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 233 in file sdk\platform\arch\boot\rvds\boot_vectors.s

WKUP_QUADEC_Handler 00000054

Symbol: WKUP_QUADEC_Handler
   Definitions
      At line 256 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 108 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 230 in file sdk\platform\arch\boot\rvds\boot_vectors.s

__user_initial_stackheap 00000058

Symbol: __user_initial_stackheap
   Definitions
      At line 289 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 288 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: __user_initial_stackheap used once
36 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000100

Symbol: Heap_Size
   Definitions
      At line 56 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 60 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 293 in file sdk\platform\arch\boot\rvds\boot_vectors.s

Stack_Size 00000600

Symbol: Stack_Size
   Definitions
      At line 45 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 48 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 292 in file sdk\platform\arch\boot\rvds\boot_vectors.s

__Vectors_Size 000000A0

Symbol: __Vectors_Size
   Definitions
      At line 125 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 76 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: __Vectors_Size used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

HardFault_HandlerC 00000000

Symbol: HardFault_HandlerC
   Definitions
      At line 181 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 189 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 193 in file sdk\platform\arch\boot\rvds\boot_vectors.s

NMI_HandlerC 00000000

Symbol: NMI_HandlerC
   Definitions
      At line 165 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 173 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 177 in file sdk\platform\arch\boot\rvds\boot_vectors.s

SVC_Handler_c 00000000

Symbol: SVC_Handler_c
   Definitions
      At line 198 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 205 in file sdk\platform\arch\boot\rvds\boot_vectors.s
      At line 209 in file sdk\platform\arch\boot\rvds\boot_vectors.s

SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 134 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 157 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 133 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      At line 159 in file sdk\platform\arch\boot\rvds\boot_vectors.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 287 in file sdk\platform\arch\boot\rvds\boot_vectors.s
   Uses
      None
Comment: __use_two_region_memory unused
6 symbols
394 symbols in table
